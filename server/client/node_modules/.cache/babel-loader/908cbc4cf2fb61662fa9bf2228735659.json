{"ast":null,"code":"import _asyncToGenerator from \"/Users/karishma/Desktop/photo/Photo-Flick/server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nimport * as api from '../api'; //action creators\n\nexport var getPost = function getPost(id) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(dispatch) {\n      var _yield$api$fetchPost, data;\n\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              dispatch({\n                type: 'START_LOADING'\n              });\n              _context.next = 4;\n              return api.fetchPost(id);\n\n            case 4:\n              _yield$api$fetchPost = _context.sent;\n              data = _yield$api$fetchPost.data;\n              dispatch({\n                type: 'FETCH_POST',\n                payload: data\n              });\n              dispatch({\n                type: 'END_LOADING'\n              });\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 10]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var getPosts = function getPosts(page) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(dispatch) {\n      var _yield$api$fetchPosts, data;\n\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              dispatch({\n                type: 'START_LOADING'\n              });\n              _context2.next = 4;\n              return api.fetchPosts(page);\n\n            case 4:\n              _yield$api$fetchPosts = _context2.sent;\n              data = _yield$api$fetchPosts.data;\n              dispatch({\n                type: 'FETCH_ALL',\n                payload: data\n              }); //payload will store posts\n\n              dispatch({\n                type: 'END_LOADING'\n              });\n              _context2.next = 13;\n              break;\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(_context2.t0.message);\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 10]]);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var createPost = function createPost(post, history) {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(dispatch) {\n      var _yield$api$createPost, data;\n\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              dispatch({\n                type: 'START_LOADING'\n              });\n              _context3.next = 4;\n              return api.createPost(post);\n\n            case 4:\n              _yield$api$createPost = _context3.sent;\n              data = _yield$api$createPost.data;\n              history(\"/posts/\".concat(data._id));\n              dispatch({\n                type: 'CREATE',\n                payload: data\n              });\n              dispatch({\n                type: 'END_LOADING'\n              });\n              _context3.next = 14;\n              break;\n\n            case 11:\n              _context3.prev = 11;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.log(_context3.t0);\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 11]]);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\nexport var updatePost = function updatePost(id, post) {\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(dispatch) {\n      var _yield$api$updatePost, data;\n\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return api.updatePost(id, post);\n\n            case 3:\n              _yield$api$updatePost = _context4.sent;\n              data = _yield$api$updatePost.data;\n              dispatch({\n                type: 'UPDATE',\n                payload: data\n              });\n              window.location.reload();\n              _context4.next = 12;\n              break;\n\n            case 9:\n              _context4.prev = 9;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.log(_context4.t0);\n\n            case 12:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 9]]);\n    }));\n\n    return function (_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n};\nexport var deletePost = function deletePost(id) {\n  return /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(dispatch) {\n      return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return api.deletePost(id);\n\n            case 3:\n              dispatch({\n                type: 'DELETE',\n                payload: id\n              });\n              window.location.reload();\n              _context5.next = 10;\n              break;\n\n            case 7:\n              _context5.prev = 7;\n              _context5.t0 = _context5[\"catch\"](0);\n              console.log(_context5.t0);\n\n            case 10:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[0, 7]]);\n    }));\n\n    return function (_x5) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n};\nexport var likePost = function likePost(id) {\n  return /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(dispatch) {\n      var _yield$api$likePost, data;\n\n      return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return api.likePost(id);\n\n            case 3:\n              _yield$api$likePost = _context6.sent;\n              data = _yield$api$likePost.data;\n              dispatch({\n                type: 'UPDATE',\n                payload: data\n              }); //window.location.reload();\n\n              _context6.next = 11;\n              break;\n\n            case 8:\n              _context6.prev = 8;\n              _context6.t0 = _context6[\"catch\"](0);\n              console.log(_context6.t0);\n\n            case 11:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[0, 8]]);\n    }));\n\n    return function (_x6) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n};\nexport var getPostsBySearch = function getPostsBySearch(searchQuery) {\n  return /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(dispatch) {\n      var _yield$api$fetchPosts2, data;\n\n      return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              dispatch({\n                type: 'START_LOADING'\n              });\n              _context7.next = 4;\n              return api.fetchPostsBySearch(searchQuery);\n\n            case 4:\n              _yield$api$fetchPosts2 = _context7.sent;\n              data = _yield$api$fetchPosts2.data.data;\n              dispatch({\n                type: 'FETCH_BY_SEARCH',\n                payload: data\n              });\n              dispatch({\n                type: 'END_LOADING'\n              });\n              _context7.next = 13;\n              break;\n\n            case 10:\n              _context7.prev = 10;\n              _context7.t0 = _context7[\"catch\"](0);\n              console.log(_context7.t0.message);\n\n            case 13:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[0, 10]]);\n    }));\n\n    return function (_x7) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n};\nexport var commentPost = function commentPost(value, id) {\n  return /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(dispatch) {\n      var _yield$api$comment, data;\n\n      return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.prev = 0;\n              _context8.next = 3;\n              return api.comment(value, id);\n\n            case 3:\n              _yield$api$comment = _context8.sent;\n              data = _yield$api$comment.data;\n              dispatch({\n                type: 'COMMENT',\n                payload: data\n              });\n              return _context8.abrupt(\"return\", data.comments);\n\n            case 9:\n              _context8.prev = 9;\n              _context8.t0 = _context8[\"catch\"](0);\n              console.log(_context8.t0);\n\n            case 12:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8, null, [[0, 9]]);\n    }));\n\n    return function (_x8) {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"names":["api","getPost","id","dispatch","type","fetchPost","data","payload","console","log","getPosts","page","fetchPosts","message","createPost","post","history","_id","updatePost","window","location","reload","deletePost","likePost","getPostsBySearch","searchQuery","fetchPostsBySearch","commentPost","value","comment","comments"],"sources":["/Users/karishma/Desktop/photo/Photo-Flick/server/client/src/actions/posts.js"],"sourcesContent":["import * as api from '../api';\r\n\r\n//action creators\r\nexport const getPost = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: 'START_LOADING' });\r\n\r\n        const { data } = await api.fetchPost(id);\r\n\r\n        dispatch({ type: 'FETCH_POST', payload: data });\r\n        dispatch({ type: 'END_LOADING' })\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const getPosts = (page) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: 'START_LOADING' });\r\n        const { data } = await api.fetchPosts(page);\r\n       \r\n        dispatch({ type: 'FETCH_ALL', payload: data })   //payload will store posts\r\n        dispatch({ type: 'END_LOADING' })\r\n    }\r\n    catch (error) {\r\n        console.log(error.message);\r\n    }\r\n}\r\nexport const createPost = (post, history) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: 'START_LOADING' });\r\n        const { data } = await api.createPost(post);\r\n\r\n        history(`/posts/${data._id}`)\r\n        dispatch({ type: 'CREATE', payload: data });\r\n        dispatch({ type: 'END_LOADING' })\r\n    }\r\n    catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\nexport const updatePost = (id, post) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.updatePost(id, post);\r\n\r\n        dispatch({ type: 'UPDATE', payload: data });\r\n        window.location.reload();\r\n    }\r\n    catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nexport const deletePost = (id) => async (dispatch) => {\r\n    try {\r\n        await api.deletePost(id);\r\n\r\n        dispatch({ type: 'DELETE', payload: id });\r\n        window.location.reload();\r\n    }\r\n    catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const likePost = (id) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.likePost(id);\r\n\r\n        dispatch({ type: 'UPDATE', payload: data });\r\n        //window.location.reload();\r\n    }\r\n    catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nexport const getPostsBySearch = (searchQuery) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: 'START_LOADING' });\r\n        const { data: { data } } = await api.fetchPostsBySearch(searchQuery);\r\n        dispatch({ type: 'FETCH_BY_SEARCH', payload: data });\r\n        dispatch({ type: 'END_LOADING' })\r\n    }\r\n    catch (error) {\r\n        console.log(error.message);\r\n    }\r\n}\r\nexport const commentPost = (value, id) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.comment(value, id);\r\n\r\n        dispatch({ type: 'COMMENT', payload: data });\r\n\r\n        return data.comments;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};"],"mappings":";;+CACA,oJ;;AADA,OAAO,KAAKA,GAAZ,MAAqB,QAArB,C,CAEA;;AACA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,EAAD;EAAA;IAAA,sEAAQ,iBAAOC,QAAP;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;cAEvBA,QAAQ,CAAC;gBAAEC,IAAI,EAAE;cAAR,CAAD,CAAR;cAFuB;cAAA,OAIAJ,GAAG,CAACK,SAAJ,CAAcH,EAAd,CAJA;;YAAA;cAAA;cAIfI,IAJe,wBAIfA,IAJe;cAMvBH,QAAQ,CAAC;gBAAEC,IAAI,EAAE,YAAR;gBAAsBG,OAAO,EAAED;cAA/B,CAAD,CAAR;cACAH,QAAQ,CAAC;gBAAEC,IAAI,EAAE;cAAR,CAAD,CAAR;cAPuB;cAAA;;YAAA;cAAA;cAAA;cASvBI,OAAO,CAACC,GAAR;;YATuB;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAR;;IAAA;MAAA;IAAA;EAAA;AAAA,CAAhB;AAaP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD;EAAA;IAAA,uEAAU,kBAAOR,QAAP;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;cAE1BA,QAAQ,CAAC;gBAAEC,IAAI,EAAE;cAAR,CAAD,CAAR;cAF0B;cAAA,OAGHJ,GAAG,CAACY,UAAJ,CAAeD,IAAf,CAHG;;YAAA;cAAA;cAGlBL,IAHkB,yBAGlBA,IAHkB;cAK1BH,QAAQ,CAAC;gBAAEC,IAAI,EAAE,WAAR;gBAAqBG,OAAO,EAAED;cAA9B,CAAD,CAAR,CAL0B,CAKuB;;cACjDH,QAAQ,CAAC;gBAAEC,IAAI,EAAE;cAAR,CAAD,CAAR;cAN0B;cAAA;;YAAA;cAAA;cAAA;cAS1BI,OAAO,CAACC,GAAR,CAAY,aAAMI,OAAlB;;YAT0B;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAV;;IAAA;MAAA;IAAA;EAAA;AAAA,CAAjB;AAYP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAOC,OAAP;EAAA;IAAA,uEAAmB,kBAAOb,QAAP;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;cAErCA,QAAQ,CAAC;gBAAEC,IAAI,EAAE;cAAR,CAAD,CAAR;cAFqC;cAAA,OAGdJ,GAAG,CAACc,UAAJ,CAAeC,IAAf,CAHc;;YAAA;cAAA;cAG7BT,IAH6B,yBAG7BA,IAH6B;cAKrCU,OAAO,kBAAWV,IAAI,CAACW,GAAhB,EAAP;cACAd,QAAQ,CAAC;gBAAEC,IAAI,EAAE,QAAR;gBAAkBG,OAAO,EAAED;cAA3B,CAAD,CAAR;cACAH,QAAQ,CAAC;gBAAEC,IAAI,EAAE;cAAR,CAAD,CAAR;cAPqC;cAAA;;YAAA;cAAA;cAAA;cAUrCI,OAAO,CAACC,GAAR;;YAVqC;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAnB;;IAAA;MAAA;IAAA;EAAA;AAAA,CAAnB;AAaP,OAAO,IAAMS,UAAU,GAAG,SAAbA,UAAa,CAAChB,EAAD,EAAKa,IAAL;EAAA;IAAA,uEAAc,kBAAOZ,QAAP;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA;cAAA,OAETH,GAAG,CAACkB,UAAJ,CAAehB,EAAf,EAAmBa,IAAnB,CAFS;;YAAA;cAAA;cAExBT,IAFwB,yBAExBA,IAFwB;cAIhCH,QAAQ,CAAC;gBAAEC,IAAI,EAAE,QAAR;gBAAkBG,OAAO,EAAED;cAA3B,CAAD,CAAR;cACAa,MAAM,CAACC,QAAP,CAAgBC,MAAhB;cALgC;cAAA;;YAAA;cAAA;cAAA;cAQhCb,OAAO,CAACC,GAAR;;YARgC;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAd;;IAAA;MAAA;IAAA;EAAA;AAAA,CAAnB;AAWP,OAAO,IAAMa,UAAU,GAAG,SAAbA,UAAa,CAACpB,EAAD;EAAA;IAAA,uEAAQ,kBAAOC,QAAP;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA;cAAA,OAEpBH,GAAG,CAACsB,UAAJ,CAAepB,EAAf,CAFoB;;YAAA;cAI1BC,QAAQ,CAAC;gBAAEC,IAAI,EAAE,QAAR;gBAAkBG,OAAO,EAAEL;cAA3B,CAAD,CAAR;cACAiB,MAAM,CAACC,QAAP,CAAgBC,MAAhB;cAL0B;cAAA;;YAAA;cAAA;cAAA;cAQ1Bb,OAAO,CAACC,GAAR;;YAR0B;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAR;;IAAA;MAAA;IAAA;EAAA;AAAA,CAAnB;AAYP,OAAO,IAAMc,QAAQ,GAAG,SAAXA,QAAW,CAACrB,EAAD;EAAA;IAAA,uEAAQ,kBAAOC,QAAP;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA;cAAA,OAEDH,GAAG,CAACuB,QAAJ,CAAarB,EAAb,CAFC;;YAAA;cAAA;cAEhBI,IAFgB,uBAEhBA,IAFgB;cAIxBH,QAAQ,CAAC;gBAAEC,IAAI,EAAE,QAAR;gBAAkBG,OAAO,EAAED;cAA3B,CAAD,CAAR,CAJwB,CAKxB;;cALwB;cAAA;;YAAA;cAAA;cAAA;cAQxBE,OAAO,CAACC,GAAR;;YARwB;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAR;;IAAA;MAAA;IAAA;EAAA;AAAA,CAAjB;AAWP,OAAO,IAAMe,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,WAAD;EAAA;IAAA,uEAAiB,kBAAOtB,QAAP;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;cAEzCA,QAAQ,CAAC;gBAAEC,IAAI,EAAE;cAAR,CAAD,CAAR;cAFyC;cAAA,OAGRJ,GAAG,CAAC0B,kBAAJ,CAAuBD,WAAvB,CAHQ;;YAAA;cAAA;cAGzBnB,IAHyB,0BAGjCA,IAHiC,CAGzBA,IAHyB;cAIzCH,QAAQ,CAAC;gBAAEC,IAAI,EAAE,iBAAR;gBAA2BG,OAAO,EAAED;cAApC,CAAD,CAAR;cACAH,QAAQ,CAAC;gBAAEC,IAAI,EAAE;cAAR,CAAD,CAAR;cALyC;cAAA;;YAAA;cAAA;cAAA;cAQzCI,OAAO,CAACC,GAAR,CAAY,aAAMI,OAAlB;;YARyC;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAjB;;IAAA;MAAA;IAAA;EAAA;AAAA,CAAzB;AAWP,OAAO,IAAMc,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAQ1B,EAAR;EAAA;IAAA,uEAAe,kBAAOC,QAAP;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA;cAAA,OAEXH,GAAG,CAAC6B,OAAJ,CAAYD,KAAZ,EAAmB1B,EAAnB,CAFW;;YAAA;cAAA;cAE1BI,IAF0B,sBAE1BA,IAF0B;cAIlCH,QAAQ,CAAC;gBAAEC,IAAI,EAAE,SAAR;gBAAmBG,OAAO,EAAED;cAA5B,CAAD,CAAR;cAJkC,kCAM3BA,IAAI,CAACwB,QANsB;;YAAA;cAAA;cAAA;cAQlCtB,OAAO,CAACC,GAAR;;YARkC;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAf;;IAAA;MAAA;IAAA;EAAA;AAAA,CAApB"},"metadata":{},"sourceType":"module"}